# From man tmux:
#  bind-key [-nr] [-T key-table] key command [arguments]
#               (alias: bind)
#         Bind key key to command.  Keys are bound in a key table.  By default (without -T), the key is bound in the prefix key table.  This table is used for keys pressed after
#         the prefix key (for example, by default `c' is bound to new-window in the prefix table, so `C-b c' creates a new window).  The root table is used for keys pressed with-
#         out the prefix key: binding `c' to new-window in the root table (not recommended) means a plain `c' will create a new window.  -n is an alias for -T root.  Keys may
#         also be bound in custom key tables and the switch-client -T command used to switch to them from a key binding.  The -r flag indicates this key may repeat, see the
#         repeat-time option.
#
#         To view the default bindings and possible commands, see the list-keys command.
#
# Before 2.4 release, syntax was:
# bind-key [-cnr] [-t key-table] key command [arguments]
#                    (alias: bind)
#              Bind key key to command.  By default (without -t) the primary key bindings are modified (those normally activated with the prefix key); in this
#              case, if -n is specified, it is not necessary to use the prefix key, command is bound to key alone.  The -r flag indicates this key may repeat,
#              see the repeat-time option.
#
#              If -t is present, key is bound in key-table: the binding for command mode with -c or for normal mode without.  To view the default bindings and
#              possible commands, see the list-keys command.

# Skip: C-a is like GNU Screen, but also annoying because Ctrl-a is used for
# jumping to beginning of line.
# remap prefix to Control + a
#set -g prefix C-a
#unbind C-b
#bind C-a send-prefix

# Skip: tmux-sensible binds R to do this.
# force a reload of the config file with Ctrl-b r
# (default behavior for Ctrl-b r is: Force redraw of the attached client.)
# unbind r
# bind-key r source-file ~/.tmux.conf

# quick pane cycling
#unbind ^B
#bind-key ^B select-pane -t :.+
# Allow sending literal Ctrl-b with Ctrl-b b
#bind-key b send-prefix

# Use vim keybindings in copy mode
setw -g mode-keys vi

# # Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# # Before OS X Yosemite, reattach-to-user-namespace was required to make pbcopy work on OS X
# # https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# # bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy y copy-pipe "pbcopy"
# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "pbcopy"

# Added per instructions from MacPort tmux-pasteboard
# Skip this; tmux-sensible takes care of it
# set-option -g default-command "/opt/local/bin/reattach-to-user-namespace zsh"


# Avoid unpleasant ESC delay in vim
# See https://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
# Skip this; tmux-sensible takes care of it.
# set -s escape-time 0


# Unicode:
# setw is set-window-option (aka set -w). See tmux man page.
# Skip this; tmux-sensible takes care of it.
# setw -g utf8 on
# set -g status-utf8 on

# Only move one pane per arrow key press.
# http://stackoverflow.com/q/13668633/708883
# Disable in favor of pain-control plug-in
# bind-key Up    select-pane -U
# bind-key Down  select-pane -D
# bind-key Left  select-pane -L
# bind-key Right select-pane -R

# Use Ctrl-b A to enable multiplexing keys to all panes in a window
bind-key A set-window-option synchronize-panes

# Skip this; tmux-sensible takes care of it.
# set-option -g history-limit 20000

# Don't auto-rename windows based on current process
set-window-option -g automatic-rename off
set-option -g allow-rename off

# Attempt to set the terminal's title. https://www.man7.org/linux/man-pages/man1/tmux.1.html#OPTIONS
set-option -g set-titles on
# Use the session and window names as the title https://man7.org/linux/man-pages/man1/tmux.1.html#FORMATS
set-option -g set-titles-string '#S:#W'
# Use in combination with iTerm2 settings "Applications in terminal may change the title" and
# Session Title set to 'Name'.

# Tmux Plugin Manager
# One-time setup: Within tmux, run prefix-I to install plugins 
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank' # Adds Ctrl-b y to copy to system clipboard
set -g @shell_mode 'vi' # Required for tmux-yank to work properly in vi mode
set -g @plugin 'tmux-plugins/tmux-resurrect' # Restore tmux after system restart
set -g @plugin 'tmux-plugins/tmux-continuum' # Auto-save tmux-resurrect system state
set -g @plugin 'tmux-plugins/tmux-pain-control' # Commands for pane selection/resize

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Automatically install plugins when tmux is started. https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# iTerm2 integration doesn't suppoort aggressive-resize
setw -g aggressive-resize off
